plugins {
    id "java-library"
    id "maven-publish"
    id "signing"
    id "com.diffplug.spotless" version "6.25.0"
}

project.version = '1.2.0'
group = "org.komamitsu"

repositories {
    mavenCentral()
}

tasks.withType(Test) {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
    testImplementation 'ch.qos.logback:logback-classic:1.5.1'
    testImplementation 'com.squareup.retrofit2:retrofit:2.9.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.12.0'
    implementation 'org.slf4j:slf4j-api:2.0.11'
    implementation 'org.msgpack:jackson-dataformat-msgpack:0.9.8'
    compileOnly 'com.squareup.retrofit2:retrofit:2.9.0'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'retrofit-converter-msgpack'
            from components.java
            pom {
                name = 'Retrofit Converter for MessagePack'
                description = 'Retrofit Converter for MessagePack'
                url = 'https://github.com/komamitsu/retrofit-converter-msgpack'
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = 'komamitsu'
                        name = 'Mitsunori Komatsu'
                        email = 'komamitsu@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/komamitsu/retrofit-converter-msgpack.git'
                    developerConnection = 'scm:git:git@github.com:komamitsu/retrofit-converter-msgpack.git'
                    url = 'https://github.com/komamitsu/retrofit-converter-msgpack'
                }
            }
        }
    }
    repositories {
        maven {
            url = uri(project.version.toString().endsWith("-SNAPSHOT") ?
                    "https://oss.sonatype.org/content/repositories/snapshots/" :
                    "https://oss.sonatype.org/service/local/staging/deploy/maven2/")
            credentials {
                username = project.hasProperty("ossrhUsername") ?
                        project.property("ossrhUsername").toString() : ""
                password = project.hasProperty("ossrhPassword") ?
                        project.property("ossrhPassword").toString() : ""
            }
        }
    }
}

signing {
    if (project.hasProperty("signing.gnupg.keyName")) {
        setRequired(true)
    }
    else if (project.hasProperty("signingKey")) {
        // def signingKeyId = project.property("signingKeyId").toString()
        def signingKey = project.property("signingKey").toString()
        def signingPassword = project.property("signingPassword").toString()
        // useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
        useInMemoryPgpKeys(signingKey, signingPassword)
        setRequired(true)
    }
    else {
        setRequired(false)
    }
    sign publishing.publications.mavenJava
}

spotless {
  java {
    importOrder()
    removeUnusedImports()
    googleJavaFormat('1.19.1')
    formatAnnotations()
  }
}

