apply plugin: 'java'
apply plugin: "findbugs"
apply plugin: 'jacoco'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'com.github.johnrengelman.shadow'


group = 'org.komamitsu'
archivesBaseName = 'retrofit-converter-msgpack'
version = '1.2.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

task wrapper(type: Wrapper) {
    //INFO: Update this value in gradle-wrapper.properties
    gradleVersion = '4.3.1'
}

def deployUsername = project.hasProperty('ossrhUsername') ? ossrhUsername : ''
def deployPassword = project.hasProperty('ossrhPassword') ? ossrhPassword : ''

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'ch.qos.logback:logback-classic:1.1.8'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'com.squareup.retrofit2:retrofit:2.4.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.10.0'
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'org.msgpack:jackson-dataformat-msgpack:0.8.16'
    compileOnly 'com.squareup.retrofit2:retrofit:2.4.0'
}

findbugs {
    effort = 'max'
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar, shadowJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: deployUsername, password: deployPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: deployUsername, password: deployPassword)
            }

            pom.project {
                name 'retrofit-converter-msgpack'
                description "Retrofit Converter for MessagePack"
                packaging 'jar'
                url 'https://github.com/komamitsu/retrofit-converter-msgpack'
                scm {
                    connection 'scm:git:git://github.com/komamitsu/retrofit-converter-msgpack.git'
                    developerConnection 'scm:git:git@github.com:komamitsu/retrofit-converter-msgpack.git'
                    url 'https://github.com/komamitsu/retrofit-converter-msgpack'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'komamitsu'
                        name 'Mitsunori Komatsu'
                        email 'komamitsu@gmail.com'
                    }
                }
            }
        }
    }
}

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3'
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}
